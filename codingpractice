const express = require('express')
const path = require('path')

const app = express()
app.use(express.json())

const {open} = require('sqlite')
const sqlite3 = require('sqlite3')

const dbPath = path.join(__dirname, 'moviesData.db')

let db = null

const intilizeDatabaseAndServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    })

    app.listen(3000, () => {
      console.log(`Server Running at http://localhost:3000`)
    })
  } catch (e) {
    console.log(`Db Error ${e.message}`)
    process.exit(1)
  }
}

intilizeDatabaseAndServer()

app.get('/movies/', async (request, response) => {
  const getMovieQuery = `SELECT movie_name FROM movie`
  const movies = await db.all(getMovieQuery)
  response.send(movies.map(eachMovie => ({movieName: eachMovie.movie_name})))
})

app.post('/movies/', async (request, response) => {
  const {directorId, movieName, leadActor} = request.body
  const addMovieQuery = `INSERT INTO movie(director_id,movie_name,lead_actor)
                         VALUES
                           ( 
                            '${directorId}',
                            '${movieName}',
                            '${leadActor}'
                           )`
  const dbResponse = await db.run(addMovieQuery)
  response.send('Movie Successfully Added')
})

app.get('/movies/:movieId', async (request, response) => {
  const {movieId} = request.params
  const getMovieQuery = `SELECT * FROM movie WHERE movie_id=${movieId};`
  const movie = await db.get(getMovieQuery)
  response.send(movie)
})

app.put('/movies/:movieId/', async (request, response) => {
  const {movieId} = request.params
  const getBody = request.body
  const {directorId, movieName, leadActor} = getBody
  const updateMovieQuery = `
  update
    movie
  set 
    director_id:'${directorId}',
    movie_name:'${movieName}',
    lead_actor:'${leadActor}'

  where
    movie_id = ${movieId} ;`
  await db.run(updateMovieQuery)
  response.send('Movie Details Updated')
})

app.delete('/movies/:movieId/', async (request, response) => {
  const {movieId} = request.params
  const deleteMovieQuery = `
    delete
      from movie
    where
      movie_id = ${movieId};`
  await db.run(deleteMovieQuery)
  response.send('Movie Removed')
})

app.get('/directors/', async (request, response) => {
  const getDirectorQuery = `SELECT * FROM director`
  const dbResponse = await db.all(getDirectorQuery)
  response.send(dbResponse)
})

app.get('/directors/:directorId/movies/', async (request, response) => {
  const directorId = request.params
  const getMovieQuery = `SELECT * FROM movie WHERE director_id = ${directorId}`
  const movies = await db.all(getMovieQuery)
  response.send(movies.map(eachMovie => ({movieName: eachMovie.movie_name})))
})

module.exports = app
